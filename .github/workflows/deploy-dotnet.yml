name: Deploy(.NET)

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: インストールする.NET SDKバージョン。
        required: false
        type: string
        default: 9.0.100-preview.6.24328.19
      version:
        description: バージョンを表す文字列。
        required: true
        type: string
      release:
        description: 安定版リリースかどうか。
        required: true
        type: boolean
      suffix:
        description: アップロードする成果物名の末尾に追加する文字列。
        required: true
        type: string
    secrets:
      AZURE_ARTIFACT_PAT:
        description: 「Packaging」スコープの読み書きを許可したAzure DevOps Personal Access Token。
        required: true
      NUGET_API_KEY:
        description: 「Push」スコープを許可したNuGet APIキー。
        required: true

permissions: {}

jobs:
  check:
    name: Check
    uses: finphie/Actions/.github/workflows/check-dotnet-platform.yml@main

  pack:
    name: Push(NuGet)
    uses: finphie/Actions/.github/workflows/upload-nuget-library.yml@main
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
      version: ${{ inputs.version }}
      release: ${{ inputs.release }}
    secrets:
      AZURE_ARTIFACT_PAT: ${{ secrets.AZURE_ARTIFACT_PAT }}
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  publish:
    name: Publish
    needs: check
    if: needs.check.outputs.projects != ''
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.check.outputs.projects) }}

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      dotnet-version: ${{ inputs.dotnet-version }}
      runs-on: ${{ (matrix.runs-on != '' && matrix.runs-on) || (startsWith(matrix.os, 'win') && 'windows-latest') || (startsWith(matrix.os, 'osx') && 'macos-latest') || 'ubuntu-latest' }}
      project: ${{ matrix.project }}
      target-platform-identifier: ${{ matrix.target-platform-identifier != '' && matrix.target-platform-identifier || 'none' }}
      target-platform-version: ${{ matrix.target-platform-version }}
      os: ${{ matrix.os }}
      architecture: ${{ matrix.architecture }}
      workload-restore: ${{ matrix.workload-restore == 'true' }}
      version: ${{ inputs.version }}
      suffix: "\
        ${{ (startsWith(matrix.os, 'win') && 'windows') || (startsWith(matrix.os, 'osx') && 'macos') || 'linux' }}_\
        ${{ inputs.suffix }}_\
        ${{ matrix.architecture }}"
