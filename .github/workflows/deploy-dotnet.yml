name: Deploy(.NET)

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: false
        type: string
        default: '7.0'
      configuration:
        required: false
        type: string
        default: Release
      version:
        required: true
        type: string
      release:
        required: true
        type: boolean
      suffix:
        required: true
        type: string
    secrets:
      AZURE_ARTIFACT_PAT:
        required: true
      NUGET_API_KEY:
        required: true

permissions: {}

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  OUTPUT_DIRECTORY: publish
  RETENTION_DAYS: 1

jobs:
  check:
    uses: finphie/Actions/.github/workflows/check-dotnet-platform.yml@main

  pack:
    name: Pack
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}.x

      - name: Pack
        run: dotnet pack --configuration ${{ inputs.configuration }} --output ${{ env.OUTPUT_DIRECTORY }} -p:Version=${{ inputs.version }}

      - name: Check extension
        id: check-extension
        uses: finphie/Actions/.github/actions/check-extension@main
        with:
          path: ${{ env.OUTPUT_DIRECTORY }}

      - name: Push(Azure Artifacts)
        if: steps.check-extension.outputs.nuget == 'true'
        run: |
          dotnet nuget add source $SOURCE_URL --name "$SOURCE" --user "$GITHUB_ACTOR" --password "$TOKEN"
          dotnet nuget push "./${{ env.OUTPUT_DIRECTORY }}/*.nupkg" --api-key "$TOKEN" --skip-duplicate --source "$SOURCE"
        env:
          SOURCE: Azure Artifacts
          SOURCE_URL: 'https://pkgs.dev.azure.com/finphie/Main/_packaging/DotNet/nuget/v3/index.json'
          TOKEN: ${{ secrets.AZURE_ARTIFACT_PAT }}

      - name: Push(NuGet)
        if: steps.check-extension.outputs.nuget == 'true' && inputs.release == 'true'
        run: dotnet nuget push "./${{ env.OUTPUT_DIRECTORY }}/*.nupkg" --api-key "$TOKEN" --skip-duplicate --source "$SOURCE_URL"
        env:
          SOURCE_URL: 'https://api.nuget.org/v3/index.json'
          TOKEN: ${{ secrets.NUGET_API_KEY }}

  publish-console:
    name: Publish(Console)
    needs: check
    if: needs.check.outputs.console != ''

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.check.outputs.console) }}
        architecture: ['x64', 'arm64']

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      project: ${{ matrix.project }}
      platform: windows
      architecture: ${{ matrix.architecture }}
      version: ${{ inputs.version }}
      suffix: ${{ inputs.suffix }}

  publish-windows:
    name: Publish(Windows)
    needs: check
    if: needs.check.outputs.windows != ''

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.check.outputs.windows) }}
        architecture: ['x64', 'arm64']

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      project: ${{ matrix.project }}
      platform: windows
      architecture: ${{ matrix.architecture }}
      version: ${{ inputs.version }}
      suffix: ${{ inputs.suffix }}

  publish-android:
    name: Publish(Android)
    needs: check
    if: needs.check.outputs.android != ''

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.check.outputs.android) }}

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      project: ${{ matrix.project }}
      platform: android
      architecture: arm64
      version: ${{ inputs.version }}
      suffix: ${{ inputs.suffix }}

  publish-server:
    name: Publish(Server)
    needs: check
    if: needs.check.outputs.server != ''

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.check.outputs.server) }}
        architecture: ['x64', 'arm64']

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      project: ${{ matrix.project }}
      platform: server
      architecture: ${{ matrix.architecture }}
      version: ${{ inputs.version }}
      suffix: ${{ inputs.suffix }}

  publish-browser:
    name: Publish(Browser)
    needs: check
    if: needs.check.outputs.browser != ''

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.check.outputs.browser) }}

    uses: finphie/Actions/.github/workflows/upload-artifacts-dotnet.yml@main
    with:
      project: ${{ matrix.project }}
      platform: browser
      architecture: wasm
      version: ${{ inputs.version }}
      suffix: ${{ inputs.suffix }}
